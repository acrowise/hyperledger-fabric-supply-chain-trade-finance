#
# Copyright Altoros. All Rights Reserved.
#

version: '2'

volumes:
  peer0.a.example.com:
  peer1.a.example.com:

services:

  ca.a.example.com:
    container_name: ca.a.example.com
    image: hyperledger/fabric-ca:FABRIC_VERSION
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca.a.example.com
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.a.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.a.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY
    ports:
      - 7054:7054
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ../artifacts/crypto-config/peerOrganizations/a.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      - ../artifacts/fabric-ca-server-config-a.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml

  peer0.a.example.com:
    container_name: peer0.a.example.com
    extends:
      file: base-intercept.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.a.example.com
      - CORE_PEER_LOCALMSPID=aMSP
      - CORE_PEER_ADDRESS=peer0.a.example.com:7051
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.a.example.com:5984
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.a.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.a.example.com:7051
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - ../artifacts/crypto-config/peerOrganizations/a.example.com/peers/peer0.a.example.com/:/etc/hyperledger/crypto/peer
        - peer0.a.example.com:/var/hyperledger/production
    depends_on:
      - ca.a.example.com
      - couchdb.a.example.com
    

  peer1.a.example.com:
    container_name: peer1.a.example.com
    extends:
      file: base-intercept.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.a.example.com
      - CORE_PEER_LOCALMSPID=aMSP
      - CORE_PEER_ADDRESS=peer1.a.example.com:7051
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.a.example.com:5984
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.a.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.a.example.com:7051
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - ../artifacts/crypto-config/peerOrganizations/a.example.com/peers/peer1.a.example.com/:/etc/hyperledger/crypto/peer
        - peer1.a.example.com:/var/hyperledger/production
    depends_on:
      - ca.a.example.com
      - couchdb.a.example.com
    

  cli.example.com:
    container_name: cli.example.com
    extends:
      file: base-intercept.yaml
      service: cli-base
    volumes:
      - ../artifacts/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls:/etc/hyperledger/crypto/orderer/tls

  cli.a.example.com:
    container_name: cli.a.example.com
    extends:
      service: cli.example.com
    environment:
      - CORE_PEER_LOCALMSPID=aMSP
    volumes:
        - ../artifacts/crypto-config/peerOrganizations/a.example.com/users/Admin@a.example.com:/etc/hyperledger/crypto/peer
    

  cliNoCryptoVolume.a.example.com:
    container_name: cliNoCryptoVolume.a.example.com
    extends:
      file: base-intercept.yaml
      service: cli-base
    environment:
      - CORE_PEER_LOCALMSPID=aMSP
    volumes:
        - ../artifacts/hosts/a/cli_hosts:/etc/hosts

  api.a.example.com:
    container_name: api.a.example.com
    image: frag:latest
    volumes:
      - ../artifacts/crypto-config:/app/crypto-config
      - ../artifacts/api-configs-a:/app/configs
    depends_on:
      - peer0.a.example.com
      - peer1.a.example.com
    

  www.a.example.com:
    container_name: www.a.example.com
    image: nginx
    ports:
      - 4001:80
    volumes:
      - ../client/build:/usr/share/nginx/html:ro
      - ../artifacts/nginx-a.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api.a.example.com

  couchdb.a.example.com:
    container_name: couchdb.a.example.com
    image: hyperledger/fabric-couchdb:0.4.10
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - 7984:5984

  ipfs.a.example.com:
    container_name: ipfs.a.example.com
    image: ipfs/go-ipfs:latest
    environment:
      LIBP2P_FORCE_PNET: 1
    ports:
      #- "IPFS_SWARM_PORT:4001" # ipfs swarm
      - "7001:5001" # expose if needed/wanted
    volumes:
      - ../artifacts/ipfs.a.example.com:/data/ipfs

  tsupply-app.a.example.com:
    container_name: tsupply-app.a.example.com
    image: tsupply-app:latest
    environment:
      PORT: 3000

  proxy.a.example.com:
    container_name: proxy.a.example.com
    image: nginx
    ports:
      - PROXY_PORT:80
    volumes:
      - ../artifacts/nginx-a.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api.a.example.com
